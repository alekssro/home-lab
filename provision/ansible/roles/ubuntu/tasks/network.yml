---
- name: Set hostname to inventory hostname
  ansible.builtin.hostname:
    name: "{{ inventory_hostname }}"
  when:
    - ansible_hostname != inventory_hostname

- name: Update /etc/hosts to include hostname
  ansible.builtin.blockinfile:
    path: /etc/hosts
    create: true
    block: |
      127.0.0.1 localhost
      127.0.1.1 {{ inventory_hostname }}

      # The following lines are desirable for IPv6 capable hosts
      ::1 ip6-localhost ip6-loopback
      fe00::0 ip6-localnet
      ff00::0 ip6-mcastprefix
      ff02::1 ip6-allnodes
      ff02::2 ip6-allrouters
      ff02::3 ip6-allhosts

- name: Set system controls for Kubernetes
  ansible.posix.sysctl:
    name: "{{ item.key }}"
    value: "{{ item.value }}"
    sysctl_file: /etc/sysctl.d/99-kubernetes.conf
    reload: true
  with_dict: "{{ sysctl_config }}"
  vars:
    sysctl_config:
      net.ipv4.ip_forward: 1
      net.ipv4.conf.all.forwarding: 1
      net.ipv6.conf.all.forwarding: 1
      net.bridge.bridge-nf-call-iptables: 1
      net.bridge.bridge-nf-call-ip6tables: 1
      net.ipv4.conf.default.rp_filter: 0
      net.ipv4.conf.all.rp_filter: 0

- name: Configure Bluetooth
  tasks:
    - name: Update APT package cache
      ansible.builtin.apt:
        update_cache: true
      changed_when: false # Don't report change for cache update alone

    - name: Install Bluetooth required packages
      ansible.builtin.apt:
        name:
          - dbus-broker
          - bluez
        state: present

- name: Configure WiFi
  vars:
    wifi_config_content: |
      network:
        version: 2
        ethernets:
          eno1:
            dhcp4: true
            optional: true
        wifis:
          wlo2:
            dhcp4: true
            optional: true
            access-points:
              "{{ wifi_ssid }}":
                password: {{ wifi_pass }}

  tasks:
    - name: Check for Netplan config file /etc/netplan/00-installer-config-wifi.yaml
      ansible.builtin.stat:
        path: /etc/netplan/00-installer-config-wifi.yaml
      register: netplan_config_00

    - name: Configure WiFi in /etc/netplan/00-installer-config-wifi.yaml if it exists
      ansible.builtin.copy:
        dest: /etc/netplan/00-installer-config-wifi.yaml
        content: "{{ wifi_config_content }}"
        owner: root
        group: root
        mode: '0600'
      when: netplan_config_00.stat.exists
      notify: Apply Netplan Configuration

    - name: Check for Netplan config file /etc/netplan/01-network-manager-all.yaml
      ansible.builtin.stat:
        path: /etc/netplan/01-network-manager-all.yaml
      register: netplan_config_01
      when: not netplan_config_00.stat.exists

    - name: Configure WiFi in /etc/netplan/01-network-manager-all.yaml if it exists (and 00 did not)
      ansible.builtin.copy:
        dest: /etc/netplan/01-network-manager-all.yaml
        content: "{{ wifi_config_content }}"
        owner: root
        group: root
        mode: '0600'
      when:
        - not netplan_config_00.stat.exists
        - netplan_config_01.stat.exists
      notify: Apply Netplan Configuration

  handlers:
    - name: Apply Netplan Configuration
      listen: Apply Netplan Configuration
      ansible.builtin.command: netplan apply
      become: true
