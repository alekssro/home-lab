apiVersion: apps/v1
kind: Deployment
metadata:
  name: dawarich-sidekiq
  namespace: dawarich
  labels:
    app: dawarich-sidekiq
spec:
  replicas: 1
  selector:
    matchLabels:
      app: dawarich-sidekiq
  template:
    metadata:
      labels:
        app: dawarich-sidekiq
    spec:
      initContainers:
        - name: wait-for-db
          image: postgres:17-alpine
          env:
            - name: PGPASSWORD
              valueFrom:
                secretKeyRef:
                  name: dawarich-secret
                  key: POSTGRES_PASSWORD
          command:
            [
              "sh",
              "-c",
              "until PGPASSWORD=$PGPASSWORD psql -h $DATABASE_HOST -p $DATABASE_PORT -U $POSTGRES_USER -d $DATABASE_NAME -c '\\q' 2>/dev/null; do echo waiting for db; sleep 2; done;",
            ]
          envFrom:
            - secretRef:
                name: dawarich-secret
            - configMapRef:
                name: dawarich-app-config
      containers:
        - name: dawarich-sidekiq
          image: freikin/dawarich:latest
          command: ["bundle", "exec", "sidekiq"]
          envFrom:
            - configMapRef:
                name: dawarich-app-config
            - secretRef:
                name: dawarich-secret
          resources:
            requests:
              cpu: "100m"
              memory: "128Mi"
            limits:
              memory: "128Mi"
          volumeMounts:
            - name: dawarich-public
              mountPath: /var/app/public
            - name: dawarich-watched
              mountPath: /var/app/tmp/imports/watched
            - name: dawarich-storage
              mountPath: /var/app/storage
      volumes:
        - name: dawarich-public
          persistentVolumeClaim:
            claimName: dawarich-public
        - name: dawarich-watched
          persistentVolumeClaim:
            claimName: dawarich-watched
        - name: dawarich-storage
          persistentVolumeClaim:
            claimName: dawarich-storage
